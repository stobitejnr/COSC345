name: Codecov Coverage Report
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  codecov:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          choco install cmake --no-progress -y
          choco install llvm --no-progress -y  # Install LLVM, which provides Clang and llvm-cov
      
      - name: Configure CMake with Clang
        run: |
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_FLAGS="-fprofile-instr-generate -fcoverage-mapping" ..
      
      - name: Build
        run: |
          cd build
          cmake --build .
      
      - name: Run tests
        run: |
          cd build
          echo "Current directory: $pwd"
          echo "Content of current directory:"
          dir
          set LLVM_PROFILE_FILE="coverage.profraw"
          ctest -C Debug --output-on-failure
          echo "Content of current directory after tests:"
          dir
      
      - name: Generate coverage report
        run: |
          cd build
          echo "Current directory: $pwd"
          echo "Content of current directory:"
          dir
          if not exist coverage.profraw (
            echo "coverage.profraw not found!"
          ) else (
            echo "coverage.profraw found, proceeding with coverage generation"
            llvm-profdata merge -sparse coverage.profraw -o coverage.profdata
            llvm-cov show -instr-profile=coverage.profdata ./*.exe > coverage.txt
          )
      
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./build/coverage.txt
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
