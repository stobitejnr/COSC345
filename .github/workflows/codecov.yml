name: Codecov Coverage Report

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

env:
  BUILD_TYPE: Debug

jobs:
  codecov:
    runs-on: windows-latest  # Use a Windows runner
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          choco install cmake --no-progress -y  # Install CMake using Chocolatey
          choco install llvm --no-progress -y   # Install LLVM for coverage reporting

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" ..

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Run tests
        run: |
          mkdir coverage
          & "C:\Program Files\OpenCppCoverage\OpenCppCoverage.exe" --export_type binary:coverage/coverage.bin --working_dir build --sources "${{ github.workspace }}\src" -- ctest -C Debug --output-on-failure
          cd build
          ctest -C Debug --output-on-failure

      - name: Generate coverage report
        run: |
          cd build
          llvm-cov gcov *.o-o > coverage.info
          
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: build/coverage.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
