name: Codacy Coverage Reporter

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  codacy-coverage-reporter:
    runs-on: windows-latest  # Use a Windows runner
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          choco install cmake --no-progress -y  # Install CMake using Chocolatey
          choco install llvm --no-progress -y   # Install LLVM for lcov equivalent

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage" ..
      
      - name: Build
        run: |
          cd build
          cmake --build .
      
      - name: Run tests
        run: |
          cd build
          ctest -C Debug --output-on-failure

      - name: Generate coverage report
        run: |
          cd build
          llvm-cov gcov *.o -o . > coverage.info   # Use llvm-cov as lcov equivalent
          del /F /Q coverage.info                  # Adjust cleanup if necessary

      - name: List files
        run: |
          dir /S
          dir /S *.gcda *.gcno
      
      - name: Run Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: build\coverage.info
